{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/paciente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ListarRegistrosComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \"Cargando...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListarRegistrosComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total: \", ctx_r1.filtered.length, \"\");\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/detalle\", a1];\n};\nconst _c1 = function (a1) {\n  return [\"/actualizar\", a1];\n};\nfunction ListarRegistrosComponent_tr_72_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\", 34)(12, \"a\", 35);\n    i0.ɵɵtext(13, \"Detalle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"a\", 36);\n    i0.ɵɵtext(15, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ListarRegistrosComponent_tr_72_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const p_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.borrar(p_r4._id));\n    });\n    i0.ɵɵtext(17, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const p_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r4.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r4.rut);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r4.edad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r4.sexo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r4.enfermedad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, p_r4._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c1, p_r4._id));\n  }\n}\nfunction ListarRegistrosComponent_tr_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 38);\n    i0.ɵɵtext(2, \"Sin resultados para los filtros aplicados.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nlet ListarRegistrosComponent = /*#__PURE__*/(() => {\n  class ListarRegistrosComponent {\n    constructor(pacienteService, router) {\n      this.pacienteService = pacienteService;\n      this.router = router;\n      this.pacientes = [];\n      this.loading = true;\n      // filtros (similar a React)\n      this.filters = {\n        q: '',\n        edad: '',\n        sexo: '',\n        ordenar: 'nombre-asc'\n      };\n    }\n    ngOnInit() {\n      this.load();\n      // recargar la lista cuando haya una navegación que termine (útil si se navega desde NuevoRegistro)\n      this.routerSub = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        // opcional: comprobar la URL para evitar recargas innecesarias\n        if (event.urlAfterRedirects.includes('/listar-registros')) {\n          this.load();\n        }\n      });\n    }\n    // nuevo método para (re)cargar datos desde la API\n    load() {\n      this.loading = true;\n      this.pacienteService.list().subscribe({\n        next: data => {\n          console.log('[ListarRegistros] load() raw data:', data);\n          const arr = Array.isArray(data) ? data : [];\n          this.pacientes = arr.map(p => {\n            if (p?._id && typeof p._id !== 'string') {\n              p._id = String(p._id);\n            }\n            return p;\n          });\n          console.log('[ListarRegistros] pacientes count:', this.pacientes.length);\n          this.loading = false;\n        },\n        error: err => {\n          console.error('Error cargando pacientes:', err);\n          this.pacientes = [];\n          this.loading = false;\n          alert('Error cargando pacientes. Revisa la consola y que el backend esté corriendo.');\n        }\n      });\n    }\n    borrar(id) {\n      if (!id) return;\n      if (!confirm('¿Eliminar registro?')) return;\n      this.pacienteService.delete(id).subscribe({\n        next: () => {\n          // actualizar la lista local sin necesidad de volver a pedirla al servidor\n          this.pacientes = this.pacientes.filter(p => p._id !== id);\n        },\n        error: err => alert('Error: ' + (err.message || err))\n      });\n    }\n    ngOnDestroy() {\n      if (this.routerSub) this.routerSub.unsubscribe();\n    }\n    // handlers de filtros (usados por template)\n    onChangeField(name, value) {\n      this.filters[name] = value;\n    }\n    onClear() {\n      this.filters = {\n        q: '',\n        edad: '',\n        sexo: '',\n        ordenar: 'nombre-asc'\n      };\n    }\n    onSubmit(event) {\n      event.preventDefault();\n      // la lista se renderiza automáticamente desde get filtered()\n    }\n    // propiedad calculada para filtros y ordenamiento (similar a useMemo)\n    get filtered() {\n      const f = this.filters;\n      const arr = Array.isArray(this.pacientes) ? this.pacientes.slice() : [];\n      const filtered = arr.filter(r => {\n        const q = (f.q || '').trim().toLowerCase();\n        const matchQ = q ? (r.nombre || '').toLowerCase().includes(q) || (r.rut || '').toLowerCase().includes(q) || (r.enfermedad || '').toLowerCase().includes(q) : true;\n        const matchSexo = f.sexo ? r.sexo === f.sexo : true;\n        const matchEdad = f.edad ? (() => {\n          const [min, max] = (f.edad || '').split('-');\n          const n = Number(r.edad || 0);\n          if (max === '+' || max === '+') return n >= Number(min);\n          return n >= Number(min) && n <= Number(max);\n        })() : true;\n        return matchQ && matchSexo && matchEdad;\n      });\n      filtered.sort((a, b) => {\n        switch (this.filters.ordenar) {\n          case 'nombre-asc':\n            return (a.nombre || '').localeCompare(b.nombre || '');\n          case 'nombre-desc':\n            return (b.nombre || '').localeCompare(a.nombre || '');\n          case 'edad-asc':\n            return Number(a.edad || 0) - Number(b.edad || 0);\n          case 'edad-desc':\n            return Number(b.edad || 0) - Number(a.edad || 0);\n          default:\n            return 0;\n        }\n      });\n      return filtered;\n    }\n    static {\n      this.ɵfac = function ListarRegistrosComponent_Factory(t) {\n        return new (t || ListarRegistrosComponent)(i0.ɵɵdirectiveInject(i1.PacienteService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ListarRegistrosComponent,\n        selectors: [[\"app-listar-registros\"]],\n        decls: 74,\n        vars: 8,\n        consts: [[1, \"card\"], [2, \"margin-bottom\", \"12px\", 3, \"submit\"], [2, \"display\", \"flex\", \"flex-wrap\", \"wrap\", \"gap\", \"12px\"], [2, \"flex\", \"1\", \"min-width\", \"180px\"], [\"name\", \"q\", \"placeholder\", \"Nombre, RUT o enfermedad\", 3, \"ngModel\", \"ngModelChange\"], [2, \"width\", \"160px\"], [\"name\", \"edad\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [\"value\", \"0-17\"], [\"value\", \"18-40\"], [\"value\", \"41-65\"], [\"value\", \"66-+\"], [2, \"width\", \"140px\"], [\"name\", \"sexo\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"M\"], [\"value\", \"F\"], [\"value\", \"Otro\"], [2, \"width\", \"200px\"], [\"name\", \"ordenar\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"nombre-asc\"], [\"value\", \"nombre-desc\"], [\"value\", \"edad-asc\"], [\"value\", \"edad-desc\"], [2, \"align-self\", \"end\", \"display\", \"flex\", \"gap\", \"8px\"], [\"type\", \"submit\", 1, \"btn\"], [\"type\", \"button\", 1, \"btn\", \"secondary\", 3, \"click\"], [1, \"card\", 2, \"padding\", \"8px 12px\", \"margin-bottom\", \"12px\"], [\"class\", \"loading\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"tableWrap\"], [1, \"table\", \"table--compact\", 2, \"width\", \"100%\", \"border-collapse\", \"collapse\"], [2, \"width\", \"220px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"loading\"], [1, \"rowActions\"], [1, \"btn\", 3, \"routerLink\"], [1, \"btn\", \"secondary\", 3, \"routerLink\"], [1, \"btn\", \"danger\", 3, \"click\"], [\"colspan\", \"6\", 1, \"emptyCell\"]],\n        template: function ListarRegistrosComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Listado de Pacientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"submit\", function ListarRegistrosComponent_Template_form_submit_3_listener($event) {\n              return ctx.onSubmit($event);\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\");\n            i0.ɵɵtext(7, \"B\\u00FAsqueda\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"input\", 4);\n            i0.ɵɵlistener(\"ngModelChange\", function ListarRegistrosComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.filters.q = $event;\n            })(\"ngModelChange\", function ListarRegistrosComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.onChangeField(\"q\", $event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\");\n            i0.ɵɵtext(11, \"Rango de edad\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"select\", 6);\n            i0.ɵɵlistener(\"ngModelChange\", function ListarRegistrosComponent_Template_select_ngModelChange_12_listener($event) {\n              return ctx.filters.edad = $event;\n            })(\"ngModelChange\", function ListarRegistrosComponent_Template_select_ngModelChange_12_listener($event) {\n              return ctx.onChangeField(\"edad\", $event);\n            });\n            i0.ɵɵelementStart(13, \"option\", 7);\n            i0.ɵɵtext(14, \"Todas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"option\", 8);\n            i0.ɵɵtext(16, \"0 - 17\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"option\", 9);\n            i0.ɵɵtext(18, \"18 - 40\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"option\", 10);\n            i0.ɵɵtext(20, \"41 - 65\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"option\", 11);\n            i0.ɵɵtext(22, \"66+\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(23, \"div\", 12)(24, \"label\");\n            i0.ɵɵtext(25, \"Sexo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"select\", 13);\n            i0.ɵɵlistener(\"ngModelChange\", function ListarRegistrosComponent_Template_select_ngModelChange_26_listener($event) {\n              return ctx.filters.sexo = $event;\n            })(\"ngModelChange\", function ListarRegistrosComponent_Template_select_ngModelChange_26_listener($event) {\n              return ctx.onChangeField(\"sexo\", $event);\n            });\n            i0.ɵɵelementStart(27, \"option\", 7);\n            i0.ɵɵtext(28, \"Todos\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"option\", 14);\n            i0.ɵɵtext(30, \"Masculino\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"option\", 15);\n            i0.ɵɵtext(32, \"Femenino\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(33, \"option\", 16);\n            i0.ɵɵtext(34, \"Otro\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(35, \"div\", 17)(36, \"label\");\n            i0.ɵɵtext(37, \"Orden\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"select\", 18);\n            i0.ɵɵlistener(\"ngModelChange\", function ListarRegistrosComponent_Template_select_ngModelChange_38_listener($event) {\n              return ctx.filters.ordenar = $event;\n            })(\"ngModelChange\", function ListarRegistrosComponent_Template_select_ngModelChange_38_listener($event) {\n              return ctx.onChangeField(\"ordenar\", $event);\n            });\n            i0.ɵɵelementStart(39, \"option\", 19);\n            i0.ɵɵtext(40, \"Nombre (A-Z)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(41, \"option\", 20);\n            i0.ɵɵtext(42, \"Nombre (Z-A)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(43, \"option\", 21);\n            i0.ɵɵtext(44, \"Edad (menor a mayor)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(45, \"option\", 22);\n            i0.ɵɵtext(46, \"Edad (mayor a menor)\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(47, \"div\", 23)(48, \"button\", 24);\n            i0.ɵɵtext(49, \"Aplicar filtros\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(50, \"button\", 25);\n            i0.ɵɵlistener(\"click\", function ListarRegistrosComponent_Template_button_click_50_listener() {\n              return ctx.onClear();\n            });\n            i0.ɵɵtext(51, \"Limpiar\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(52, \"div\", 26);\n            i0.ɵɵtemplate(53, ListarRegistrosComponent_div_53_Template, 2, 0, \"div\", 27);\n            i0.ɵɵtemplate(54, ListarRegistrosComponent_div_54_Template, 3, 1, \"div\", 28);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(55, \"div\", 29)(56, \"table\", 30)(57, \"thead\")(58, \"tr\")(59, \"th\");\n            i0.ɵɵtext(60, \"Nombre\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(61, \"th\");\n            i0.ɵɵtext(62, \"RUT\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(63, \"th\");\n            i0.ɵɵtext(64, \"Edad\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(65, \"th\");\n            i0.ɵɵtext(66, \"Sexo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(67, \"th\");\n            i0.ɵɵtext(68, \"Enfermedad\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(69, \"th\", 31);\n            i0.ɵɵtext(70, \"Acciones\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(71, \"tbody\");\n            i0.ɵɵtemplate(72, ListarRegistrosComponent_tr_72_Template, 18, 11, \"tr\", 32);\n            i0.ɵɵtemplate(73, ListarRegistrosComponent_tr_73_Template, 3, 0, \"tr\", 28);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngModel\", ctx.filters.q);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.filters.edad);\n            i0.ɵɵadvance(14);\n            i0.ɵɵproperty(\"ngModel\", ctx.filters.sexo);\n            i0.ɵɵadvance(12);\n            i0.ɵɵproperty(\"ngModel\", ctx.filters.ordenar);\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n            i0.ɵɵadvance(18);\n            i0.ɵɵproperty(\"ngForOf\", ctx.filtered);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.filtered.length === 0);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i2.RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return ListarRegistrosComponent;\n})();\nexport { ListarRegistrosComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}