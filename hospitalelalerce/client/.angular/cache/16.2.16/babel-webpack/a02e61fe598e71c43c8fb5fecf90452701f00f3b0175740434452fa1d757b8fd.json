{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { GLOBAL } from './global';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet PacienteService = /*#__PURE__*/(() => {\n  class PacienteService {\n    constructor(http) {\n      this.http = http;\n      this.url = `${GLOBAL.url}/pacientes`;\n    }\n    list() {\n      return this.http.get(this.url);\n    }\n    getById(id) {\n      return this.http.get(`${this.url}/${id}`);\n    }\n    create(paciente) {\n      // Si el backend no devuelve body JSON (respuesta vacía), Angular puede fallar intentando parsear.\n      // Pedimos texto para evitar ese error. Los componentes actuales no necesitan el body.\n      return this.http.post(this.url, paciente, {\n        responseType: 'text'\n      });\n    }\n    update(id, paciente) {\n      return this.http.put(`${this.url}/${id}`, paciente);\n    }\n    delete(id) {\n      return this.http.delete(`${this.url}/${id}`);\n    }\n    search(filters) {\n      let params = new HttpParams();\n      if (filters.sexo) params = params.set('sexo', filters.sexo);\n      if (filters.fechaIngreso) params = params.set('fechaIngreso', filters.fechaIngreso);\n      if (filters.enfermedad) params = params.set('enfermedad', filters.enfermedad);\n      return this.http.get(`${this.url}/search`, {\n        params\n      });\n    }\n    static {\n      this.ɵfac = function PacienteService_Factory(t) {\n        return new (t || PacienteService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: PacienteService,\n        factory: PacienteService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PacienteService;\n})();\nexport { PacienteService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}