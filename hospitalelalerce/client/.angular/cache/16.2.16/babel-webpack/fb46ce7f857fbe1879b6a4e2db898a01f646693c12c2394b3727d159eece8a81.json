{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/paciente.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListarRegistrosComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1, \"Cargando...\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/detalle\", a1];\n};\nconst _c1 = function (a1) {\n  return [\"/actualizar\", a1];\n};\nfunction ListarRegistrosComponent_ul_4_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6);\n    i0.ɵɵelement(1, \"img\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"small\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 11)(10, \"a\", 12);\n    i0.ɵɵtext(11, \"Detalle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"a\", 13);\n    i0.ɵɵtext(13, \"Actualizar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ListarRegistrosComponent_ul_4_li_1_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const p_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.borrar(p_r3._id));\n    });\n    i0.ɵɵtext(15, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const p_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.pacienteService.getImageUrl(p_r3.fotoPersonal), i0.ɵɵsanitizeUrl)(\"alt\", p_r3.nombre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(p_r3.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"RUT: \", p_r3.rut, \" \\u2022 \", p_r3.edad, \" a\\u00F1os\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r3.enfermedad);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c0, p_r3._id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c1, p_r3._id));\n  }\n}\nfunction ListarRegistrosComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 4);\n    i0.ɵɵtemplate(1, ListarRegistrosComponent_ul_4_li_1_Template, 16, 12, \"li\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.pacientes);\n  }\n}\nlet ListarRegistrosComponent = /*#__PURE__*/(() => {\n  class ListarRegistrosComponent {\n    constructor(pacienteService, router) {\n      this.pacienteService = pacienteService;\n      this.router = router;\n      this.pacientes = [];\n      this.loading = true;\n    }\n    ngOnInit() {\n      this.load();\n      // recargar la lista cuando haya una navegación que termine (útil si se navega desde NuevoRegistro)\n      this.routerSub = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        // opcional: comprobar la URL para evitar recargas innecesarias\n        if (event.urlAfterRedirects.includes('/listar-registros')) {\n          this.load();\n        }\n      });\n    }\n    // nuevo método para (re)cargar datos desde la API\n    load() {\n      this.loading = true;\n      this.pacienteService.list().subscribe({\n        next: data => {\n          this.pacientes = data;\n          this.loading = false;\n        },\n        error: err => {\n          console.error('Error cargando pacientes:', err);\n          this.pacientes = [];\n          this.loading = false;\n          alert('Error cargando pacientes. Revisa la consola y que el backend esté corriendo.');\n        }\n      });\n    }\n    borrar(id) {\n      if (!id) return;\n      if (!confirm('¿Eliminar registro?')) return;\n      this.pacienteService.delete(id).subscribe({\n        next: () => {\n          // actualizar la lista local sin necesidad de volver a pedirla al servidor\n          this.pacientes = this.pacientes.filter(p => p._id !== id);\n        },\n        error: err => alert('Error: ' + (err.message || err))\n      });\n    }\n    ngOnDestroy() {\n      if (this.routerSub) this.routerSub.unsubscribe();\n    }\n    static {\n      this.ɵfac = function ListarRegistrosComponent_Factory(t) {\n        return new (t || ListarRegistrosComponent)(i0.ɵɵdirectiveInject(i1.PacienteService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ListarRegistrosComponent,\n        selectors: [[\"app-listar-registros\"]],\n        decls: 5,\n        vars: 2,\n        consts: [[1, \"card\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"patient-list\", 4, \"ngIf\"], [1, \"loading\"], [1, \"patient-list\"], [\"class\", \"patient-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"patient-item\"], [3, \"src\", \"alt\"], [1, \"meta\"], [1, \"text-muted\"], [1, \"small\"], [1, \"actions\"], [1, \"btn\", 3, \"routerLink\"], [1, \"btn\", \"secondary\", 3, \"routerLink\"], [1, \"btn\", \"danger\", 3, \"click\"]],\n        template: function ListarRegistrosComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Listado de Pacientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, ListarRegistrosComponent_div_3_Template, 2, 0, \"div\", 1);\n            i0.ɵɵtemplate(4, ListarRegistrosComponent_ul_4_Template, 2, 1, \"ul\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return ListarRegistrosComponent;\n})();\nexport { ListarRegistrosComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}